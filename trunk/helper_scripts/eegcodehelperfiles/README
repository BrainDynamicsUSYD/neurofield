Some of these that write and read the eegcode input, output, and dump files might be broken if the string formats have changed since I last used them. Unfortunately eegcode can be a bit cryptic when it crashes on a bad .conf or .dump so you might need to delve into the relevant *.cpp to see what string it expects (often there are annoying differences in capitalization or the position of the colon before the number).

eeg - a tcsh script to let you run eegcode from within matlab using !eeg.

writeconf.m - writes eegcode.conf for the usual EIRS form of the model. It
             uses ve_root.m and sigm.m.

readoutput2.m - read time series from eegcode.output (or a given
               filename).

readpars.m - read parameters from a .conf file (based on PD's getlinw.m),
            returning a struct like the ones used in some of the other
            codes I sent you.

readsynaptout.m - read eegcode.synaptout.* files, which are used when
            allowing nuab to vary as a function of time. I haven't used
            this in ages so it's probably broken.

ssepconf4.m - like writeconf.m but has an extra sinusoidal stimulus
             population, and replaces ve_root.m and sigm.m with nested
             functions; also takes optional stimulus amplitude,
             frequency, and .conf filename.

eegconfrestart2.m - read in a .dump file, change a value of a parameter,
        and write a new .dump file. This is quite specialized (only works
        for changing sinusoidal stimulus amplitude or frequency). Also I
        notice that in its current form this illustrates a bug in eegcode
        (which might have been fixed by now) where the .dump written by
        eegcode is not in the format that 'eegcode -restart' expects.

sseploop_mp.m - for use on yossarian, loop over stimulus frequency, write
        .confs using ssepconf4.m, run each, read the time series in and
        calculate spectra.

sseploop_mp_cont.m - writes a .conf, runs eegcode, takes the .dump and
        changes a parameter using eegconfrestart2.m, then continues the
        solution from there. Doesn't actually need to be used on
        yossarian despite the 'mp' in the filename.

pspec.m - calculate power spectrum, based on PD's diag.pro
 
.


So to write a config, run eegcode, and plot the time series:
writeconf, !eeg
[t,y]=readoutput2;
plot(t,y)